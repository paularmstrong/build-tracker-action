"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Copyright (c) 2019 Paul Armstrong
 */
var brotliSize = __importStar(require("brotli-size"));
var crypto_1 = __importDefault(require("crypto"));
var fs_1 = __importDefault(require("fs"));
var gzip_size_1 = __importDefault(require("gzip-size"));
var defaultFilenameHash = function () { return null; };
function readfile(filePath, getFilenameHash) {
    if (getFilenameHash === void 0) { getFilenameHash = defaultFilenameHash; }
    var stat = fs_1.default.statSync(filePath).size;
    var contents = fs_1.default.readFileSync(filePath);
    var gzip = gzip_size_1.default.sync(contents);
    var hash = getFilenameHash(filePath);
    if (!hash) {
        var md5sum = crypto_1.default.createHash('md5');
        md5sum.update(contents);
        hash = md5sum.digest('hex');
    }
    var output = { stat: stat, gzip: gzip, hash: hash };
    try {
        output.brotli = brotliSize.sync(contents);
    }
    catch (e) { }
    return output;
}
exports.default = readfile;
//# sourceMappingURL=readfile.js.map