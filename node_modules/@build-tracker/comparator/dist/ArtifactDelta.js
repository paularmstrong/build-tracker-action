"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var artifact_math_1 = require("./artifact-math");
var ArtifactDelta = /** @class */ (function () {
    function ArtifactDelta(name, budgets, sizes, prevSizes, hashChanged) {
        this._name = name;
        this._budgets = budgets;
        this._sizes = sizes;
        this._prevSizes = prevSizes;
        this._hashChanged = hashChanged;
    }
    Object.defineProperty(ArtifactDelta.prototype, "name", {
        get: function () {
            return this._name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ArtifactDelta.prototype, "sizes", {
        get: function () {
            var _this = this;
            return Object.keys(this._sizes).reduce(function (memo, sizeKey) {
                // @ts-ignore
                memo[sizeKey] = artifact_math_1.delta(sizeKey, _this._sizes, _this._prevSizes);
                return memo;
            }, __assign({}, this._sizes));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ArtifactDelta.prototype, "percents", {
        get: function () {
            var _this = this;
            return Object.keys(this._sizes).reduce(function (memo, sizeKey) {
                // @ts-ignore
                memo[sizeKey] = artifact_math_1.percentDelta(sizeKey, _this._sizes, _this._prevSizes);
                return memo;
            }, __assign({}, this._sizes));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ArtifactDelta.prototype, "hashChanged", {
        get: function () {
            return this._hashChanged;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ArtifactDelta.prototype, "budgets", {
        get: function () {
            var _this = this;
            if (!this._results) {
                var sizes_1 = this.sizes;
                var percents_1 = this.percents;
                this._results = [];
                this._budgets.forEach(function (budget) {
                    var level = budget.level, maximum = budget.maximum, sizeKey = budget.sizeKey, type = budget.type;
                    var actual = type === 'delta'
                        ? sizes_1[sizeKey]
                        : type === 'percentDelta'
                            ? percents_1[sizeKey]
                            : _this._sizes
                                ? _this._sizes[sizeKey]
                                : 0;
                    var expected = maximum;
                    _this._results.push({
                        actual: actual,
                        expected: expected,
                        level: level,
                        passing: actual < expected,
                        sizeKey: sizeKey,
                        type: type
                    });
                });
            }
            return this._results;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ArtifactDelta.prototype, "failingBudgets", {
        get: function () {
            return this.budgets.filter(function (budget) { return budget.passing === false; });
        },
        enumerable: true,
        configurable: true
    });
    ArtifactDelta.prototype.toObject = function () {
        return {
            name: this.name,
            sizes: this.sizes,
            percents: this.percents,
            hashChanged: this.hashChanged,
            budgets: this.budgets,
            failingBudgets: this.failingBudgets
        };
    };
    return ArtifactDelta;
}());
exports.default = ArtifactDelta;
//# sourceMappingURL=ArtifactDelta.js.map