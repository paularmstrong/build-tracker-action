/**
 * Copyright (c) 2019 Paul Armstrong
 */
import ArtifactDelta from './ArtifactDelta';
import { ArtifactBudgets, ArtifactFilters, Group } from '@build-tracker/types';
import Build, { BuildMeta } from '@build-tracker/build';
export interface DeltaOptions {
    artifactBudgets?: ArtifactBudgets;
    artifactFilters?: ArtifactFilters;
    groups?: Array<Group>;
}
export default class BuildDelta<M extends BuildMeta = BuildMeta> {
    private _baseBuild;
    private _prevBuild;
    private _artifactBudgets;
    private _artifactDeltas;
    private _artifactFilters;
    private _artifactNames;
    private _groups;
    private _groupDeltas;
    private _sizeKeys;
    constructor(baseBuild: Build<M>, prevBuild: Build<M>, options?: DeltaOptions);
    get baseBuild(): Build<M>;
    get prevBuild(): Build<M>;
    get artifactSizes(): Array<string>;
    getArtifactDelta(name: string): ArtifactDelta;
    get artifactNames(): Set<string>;
    private get _fauxArtifactSizes();
    get artifactDeltas(): Array<ArtifactDelta>;
    getGroupDelta(groupName: string): ArtifactDelta;
    get groupDeltas(): Map<string, ArtifactDelta>;
}
//# sourceMappingURL=BuildDelta.d.ts.map